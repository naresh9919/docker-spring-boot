pipeline {
    agent any
    
    tools{
        jdk 'jdk11'
        maven 'maven3'
    }

    environment {
        APP_NAME = "docker-spring-boot"
        RELEASE = "4.0.0"
        DOCKER_USER = "nareshbabu1991"
        DOCKER_PASS = "dockerhub-cred"
        IMAGE_NAME = "${DOCKER_USER}" + "/" + "${APP_NAME}"
        IMAGE_TAG = "${RELEASE}-${BUILD_NUMBER}"
    }

    stages {
        stage('Checkout') {
            steps {
                checkout scmGit(branches: [[name: '*/master']], extensions: [], userRemoteConfigs: [[url: 'https://github.com/naresh9919/docker-spring-boot.git']])
            }
        }
        
        stage ("Build JAR") {
            steps {
                sh "mvn clean install"
            }
        }

        stage('Build docker image'){
            steps{
                script{
                    docker.withRegistry('',DOCKER_PASS) {
                        ///remove old images from dockerhub registory
                        sh "docker images --format '{{.Repository}}:{{.Tag}}' | grep ${IMAGE_NAME} | grep -v ${RELEASE}-${BUILD_NUMBER} | grep -v latest | xargs -I {} docker rmi {} || true"
                        docker_image = docker.build "${IMAGE_NAME}"
                    }
                }
            }
        }

        stage("Docker Build & Push"){
            steps{
                script{
                    docker.withRegistry('',DOCKER_PASS) {
                        docker_image.push("${IMAGE_TAG}")
                        docker_image.push('latest')
                    }
                }
            }
        }
    }
}
